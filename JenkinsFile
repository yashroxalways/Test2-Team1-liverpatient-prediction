pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the repository
                git 'https://your-git-repo-url'  // Replace with your repo URL
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install Python dependencies
                sh 'pip install -r requirements.txt'

                // Install or verify ChromeDriver and Chrome are available (if not installed in your environment)
                sh '''
                if ! [ -x "$(command -v chromedriver)" ]; then
                  wget https://chromedriver.storage.googleapis.com/115.0.5790.102/chromedriver_linux64.zip
                  unzip chromedriver_linux64.zip
                  sudo mv chromedriver /usr/local/bin/
                fi
                '''
            }
        }

        stage('Run Flask App') {
            steps {
                // Start the Flask app in the background
                sh 'nohup python3 app.py &'
                // Wait for the Flask app to start (adjust the sleep time as needed)
                sleep 10
            }
        }

        stage('Run Selenium Tests') {
            steps {
                // Run the Selenium test script
                sh 'python3 test_flask_app.py'
            }
        }

        stage('Post Test Cleanup') {
            steps {
                // Kill the Flask app running in the background
                sh 'pkill -f app.py'
            }
        }
    }

    post {
        always {
            // Clean up workspace after the pipeline is done
            cleanWs()
        }

        success {
            echo 'Tests passed successfully!'
        }

        failure {
            echo 'Tests failed!'
        }
    }
}
